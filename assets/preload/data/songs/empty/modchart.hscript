//JOELwindows7: steal example from BulbyVR
// https://github.com/FunkinModdingPlus/ModdingPlus/blob/master/assets/data/milf/modchart.hscript
// It should work the same like Kade Engine Lua Modchart, just this time, in Haxe Language
// Lua Modchart Documentation at: https://kadedev.github.io/Kade-Engine/modchart .
// https://github.com/KadeDev/Kade-Engine/wiki
// But remember, this is Haxe Script. convert your syntax format to it here.
// templated by JOELwindows7, with yoinks from that documentation & that BulbyVR hscripts.

function loaded(song)
{

}

function start(song) 
{

}

function songStart()
{

}

function songEnd()
{

}

function introCutscene()
{

}

function outroCutscene()
{

}

function dialogueStart()
{

}

function dialogueEnd()
{

}

function dialogueSkip()
{
    //dialogueEnd() // do you want to do the same anyway?
}

function dialogueNext(index)
{
    //`index` is where dialogue line number you were at
}

function update(elapsed)
{

}

function beatHit(beat)
{
    
}

function stepHit(step)
{

}

function keyPressed(key)
{

}

function keyReleased(key)
{
    
}

function playerTwoTurn(beatOf, stepOf)
{

}

function playerTwoMiss(note, position, beatOf, stepOf)
{

}

function playerTwoSing(note, position, beatOf, stepOf)
{

}

function playerOneTurn(beatOf, stepOf)
{
    
}

function playerOneMiss(note, position, beatOf, stepOf)
{

}

function playerOneSing(note, position, beatOf, stepOf)
{
    // note:Int => left 0, down 1, up 2, right 3
    // position:Float => Song position where pressed
}

function characterSing(whichTurn, absoluteCharId, note, position, beatOf, stepOf)
{
    // whichTurn:Int => 0 your turn (bf if not opponent, dad if opponent), 1 opponent turn
    // absoluteCharId:Int => bf 0, dad 1
}

function characterTurn(whichTurn, absoluteCharId)
{

}

function characterMiss(whichTurn, absoluteCharId, note, position, beatOf, stepOf)
{

}

function variableChange(name,value)
{

}

function methodExecutes(name,args)
{
    
}

function colorizeColorablebyKey(note, justOne, toWhichBg)
{
    if (note == 'left')
    {
        //trace("set color magenta (hscript)");
        chooseColoringColor("magenta", justOne, toWhichBg);
    }
    else if (note == 'down')
    {
        //trace("set color cyan (hscript)");
        chooseColoringColor("cyan", justOne, toWhichBg);
    }
    else if (note == 'up')
    {
        //trace("set color lime (hscript)");
        chooseColoringColor("lime", justOne, toWhichBg);
    }
    else if (note == 'right')
    {
        //trace("set color red (hscript)");
        chooseColoringColor("red", justOne, toWhichBg);
    }
}

function gameOver(blueballs)
{
    // When gameOver
}

function gameOverAnimationFinished(blueballs)
{
    // when gameOver animation finished
}

function endGameOver(blueballs)
{
    // when press enter to retry
}


trace("finish loading hscript <3 yay cool and good.");