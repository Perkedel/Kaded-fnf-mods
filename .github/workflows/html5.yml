# This is a basic workflow to help you get started with Actions

name: HTML5 Build CI

# Controls when the workflow will run
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.1.5
      # Runs a set of commands using the runners shell
      - name: script run line haha
        run: |
          sudo add-apt-repository ppa:haxe/releases -y
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib haxe -y
          mkdir "%HAXELIB_ROOT%"
          haxelib setup "%HAXELIB_ROOT%"
          haxelib install lime 7.9.0
          haxelib install openfl
          haxelib install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib install flixel-addons
          haxelib install flixel-ui
          haxelib install hscript
          haxelib install flixel-addons
          haxelib git faxe https://github.com/uhrobots/faxe
          haxelib git polymod https://github.com/MasterEric/polymod.git
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git extension-webm https://github.com/KadeDev/extension-webm
          haxelib run lime rebuild extension-webm linux
          haxelib run lime rebuild extension-webm html5
          haxelib git linc_luajit https://github.com/MasterEric/linc_luajit.git
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit.git
          haxelib install actuate 
          haxelib install android6permissions
          haxelib git haxe-hardware https://github.com/Perkedel/haxe-hardware.git
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex # for the alternative against Lua, like BulbyVR's FNFM+
          haxelib install tjson #BulbyVR used TJSON for JSON parsing instead of built-in JSON handlers.
          haxelib install uniontypes #BulbyVR used this
          haxelib install json2object #BulbyVR used this to convert JSON to object
          haxelib install extension-webview #luckydog7 for Android
          haxelib git xinput https://github.com/furusystems/openfl-xinput.git
          haxelib install haxe-files
          haxelib install hxcpp-debug-server
          haxelib install tink_core
          haxelib install grig.audio
          haxelib install grig.midi
          haxelib git tentools https://github.com/TentaRJ/tentools.git
          haxelib git systools https://github.com/haya3218/systools
          haxelib run lime rebuild systools html5
          haxelib run lime rebuild systools linux
          haxelib list
      - name: Build HTML5 now
        run: |
          haxelib run lime build html5
          
      - uses: actions/upload-artifact@v2
        with:
          name: HTML5 Build
          path: export/release/html5/bin
      
      - name: Push to Itch HTML5
        if: ${{github.event.name == "push"}}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: html5-GHAction
          ITCH_GAME: last-funkin-moments
          ITCH_USER: joelwindows7
          PACKAGE: export/release/html5/bin
      
      - name: Yo, release now
        uses: softprops/action-gh-release@v0.1.13
        if: startsWith(github.ref, 'refs/tags/')
