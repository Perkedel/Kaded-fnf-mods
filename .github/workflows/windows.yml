# Windows pls

name: Windows Build CI

# Controls when the workflow will run
on: [push, pull_request]

env:
  ANDROID_SDK_LOC: C:\Android\android-sdk
  ANDROID_NDK_ROOT_LOC: C:\Android
  ANDROID_CMD_LOC: C:\projects\android-cmd

permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Do checkout pls
        uses: actions/checkout@v2
      # Steps represent a sequence of tasks that will be executed as part of the job
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: first, begin caching stuffs
        uses: actions/cache@v2.1.7
        id: cache-stuff
        with:
          path: |
            D:\a\Kaded-fnf-mods\Kaded-fnf-mods\export\
            C:\hostedtoolcache\haxe\
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - uses: krdlab/setup-haxe@v1.1.6
        with:
          haxe-version: 4.3.2
      # Runs a set of commands using the runners shell

      - name: Schlob Chocolatey
        run: |
          # choco install vcredist140
          choco install make -y
          choco install cmake -y
          choco install wget -y # downloader
          choco install butler -y # upload to itch io
          choco install android-sdk -y
          choco install android-ndk --version=16.2 -y
          choco install adb -y
          choco install haxe -y
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
          RefreshEnv

      - name: first, lemme download android stuff
        run: |
          wget -q -O android_ndk.zip https://dl.google.com/android/repository/android-ndk-r15c-windows-x86_64.zip?hl=fi
          wget -q -O android_cmd.zip https://dl.google.com/android/repository/commandlinetools-win-7302050_latest.zip
          wget -q -O android_build-tools.zip https://dl.google.com/android/repository/build-tools_r30.0.1-windows.zip
          wget -q -O android_platforms.zip https://dl.google.com/android/repository/android-19_r04.zip
          wget -q -O android_platform-tools.zip https://dl.google.com/android/repository/platform-tools_r31.0.2-windows.zip
          unzip -q .\android_ndk.zip -d "%ANDROID_NDK_ROOT_LOC%"
          unzip -q .\android_cmd.zip -d "%ANDROID_SDK_LOC%"
          unzip -q -n .\android_build-tools.zip -d %ANDROID_SDK_LOC%\build-tools
          unzip -q .\android_platforms.zip -d "%ANDROID_SDK_LOC%"
          unzip -q -n .\android_platform-tools.zip -d "%ANDROID_SDK_LOC%"  

      - name: script run line haha
        # if: steps.cache-stuff.outputs.cache-hit != 'true'
        run: |
          haxelib install Console.hx
          echo "new Psych's found-way of auto install all libraries"
          echo 'https://github.com/ShadowMario/FNF-PsychEngine/blob/main/hmm.json'
          haxelib install hmm
          haxelib run hmm install
          echo 'you should have all done.'
          RefreshEnv
          haxelib run lime setup flixel -y
          haxelib run lime setup -y
          haxelib run lime setup sscript -y
          haxelib run lime rebuild extension-webm windows
          haxelib run lime rebuild extension-webm android
          haxelib run lime rebuild systools windows
          
          haxelib list
          dir
          pwd
      
      - name: if there is cache still then just update everything
        if: steps.cache-stuff.outputs.cache-hit == 'true'
        run: |
          haxe -version
          haxelib update --always
          haxelib run lime setup flixel -y
          haxelib run lime setup -y
          haxelib run lime rebuild extension-webm linux
          haxelib run lime rebuild systools linux
          haxelib run lime rebuild yagp linux
          haxelib list
      
      #- name: TEMP patch FlxAction.hx workaround
      #  run: |
      #    dir C:\
      #    dir C:\hostedtoolcache
      #    dir "C:\hostedtoolcache\windows"
      #    dir "C:\hostedtoolcache\windows\haxe"
      #    dir "C:\hostedtoolcache\windows\haxe\4.3.2"
      #    dir "C:\hostedtoolcache\windows\haxe\4.3.2\x64"
      #    dir "C:\hostedtoolcache\windows\haxe\4.3.2\x64\lib"
      #    dir "C:\hostedtoolcache\windows\haxe\4.3.2\x64\lib\flixel"
      #    wget "https://gist.github.com/JOELwindows7/118b3a40a76d60e701399a61fb5e1c2d/raw/fef2b6649a4b51d76f912459ef3f107b4bd25905/FlxAction.hx"
      #    dir
      #    pwd
      #    mv ".\FlxAction.hx" "C:\hostedtoolcache\windows\haxe\4.3.2\x64\lib\flixel\4,11,0\flixel\input\actions\FlxAction.hx" -Force
      
      - name: Setup Android support
        run: |
          haxelib run lime config ANDROID_SDK "%ANDROID_SDK_LOC%"
          haxelib run lime config ANDROID_NDK_ROOT "%ANDROID_NDK_ROOT_LOC%\android-ndk-r15c"
          haxelib run lime config ANDROID_SETUP true
          haxelib run lime config JAVA_HOME C:\Program Files\Java\jdk1.8.0_211
      
      - name: Manual Android NDLL download for extension-webm
        run: |
          wget https://github.com/Perkedel/After-Church/raw/master/RAW%20files/stray%20anything/Borkarounds/extension-webm/ndll/Android.zip
          unzip .\Android.zip
          mv ".\Android" "C:\hostedtoolcache\windows\haxe\4.3.2\x64\lib\extension-webm\git\ndll"
        
      - name: Obtain Gamejolt empty key
        run : |
          wget https://gist.github.com/JOELwindows7/ba79db473ab5e4765293fb19c62240cb/raw/d5fc74359ec9ae272003c5d715d04b4dbbd7810d/GJkeys.hx
          mv .\GJkeys.hx D:\a\Kaded-fnf-mods\Kaded-fnf-mods\source\GJKeys.hx
      
      - name: Oh peck, I can't believe you've done this
        run: |
          echo butler check
          butler -h
          ls
          pwd
      
      - name: build Windows now!
        run: |
          haxelib run lime build windows -final
          
      - name: Artifact Windows now
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Windows Build
          path: export/release/windows/bin
        
      - name: Manually push to Itch Windows because that Action container only support Linux wtf bro
        env: 
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        run: |
          ls
          pwd
          butler push D:\a\Kaded-fnf-mods\Kaded-fnf-mods\export\release\windows\bin joelwindows7/last-funkin-moments:windows-GHAction
      
      - name: Yo, release now
        # uses: softprops/action-gh-release@v0.1.13
        # if: startsWith(github.ref, 'refs/tags/')
        #  https://github.com/marketplace/actions/upload-files-to-a-github-release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: export/release/windows/bin
          asset_name: Windows Build
          tag: ${{ github.ref }}
          overwrite: true
          # body: "This is my release text"

